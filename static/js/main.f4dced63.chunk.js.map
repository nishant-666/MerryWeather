{"version":3,"sources":["responsive/Device.js","components/SearchCity.js","components/SmallLabel.js","components/Text.js","components/ForecastHour.js","components/ResultFadeIn.js","components/MediumLabel.js","components/Result.js","components/NotFound.js","components/App.js","serviceWorker.js","index.js"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","SearchBar","styled","form","showResult","SearchCity","submit","value","change","onSubmit","Input","fluid","icon","style","borderRadius","placeholder","onChange","SmallLabel","h4","color","weight","fontSize","align","firstToUpperCase","Text","span","ForecastWrapper","div","WeatherIcon","img","ForecastHour","props","highestTemp","lowestTemp","month","day","hour","iconUrl","marginBottom","fontFamily","src","Grid","Row","columns","Column","marginTop","ResultFadeIn","keyframes","MediumLabel","h3","Results","LocationWrapper","CurrentWeatherWrapper","Temperature","WeatherDetailsWrapper","WeatherDetail","Forecast","Result","weather","city","country","date","main","temp","sunset","sunrise","humidity","pressure","forecasts","forecast","map","item","key","dt","Math","floor","temp_max","temp_min","dt_txt","slice","weatherIcon","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faCloud","faSmog","divided","id","centered","position","left","NotFoundWrapper","NotfoundIcon","NotFoundText","NotFound","faFrown","AppTitle","h1","showLabel","secondary","WeatherWrapper","App","state","weatherInfo","error","handleInputChange","e","setState","target","handleSearchCity","preventDefault","APIkey","Promise","all","fetch","then","res1","res2","ok","json","Error","statusText","data1","data2","currentDate","Date","getDay","getDate","getMonth","sys","toLocaleTimeString","name","description","clouds","wind","speed","list","catch","console","log","this","padding","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4dced63.chunk.js","sourcesContent":["const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '525px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\nconst device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n  desktopL: `(min-width: ${size.desktop})`,\n};\n\nexport default device;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport device from '../responsive/Device';\nimport { Input } from 'semantic-ui-react'\n\nconst SearchBar = styled.form`\n  top: ${({ showResult }) => (showResult ? '0%' : '30%')};\n  position: relative;\n  margin: 0 auto;\n  max-width: 500px;\n  transition: 0.8s 0.5s;\n  @media ${device.laptopL} {\n    max-width: 600px;\n  }\n  @media ${device.desktop} {\n    max-width: 700px;\n  }\n`;\n\n\nconst SearchCity = ({ submit, value, change, showResult }) => {\n  return (\n    <>\n      <SearchBar showResult={showResult} onSubmit={submit}>\n        <Input fluid icon='map marker alternate' style={{borderRadius:30}} value={value} placeholder=\"Enter a city..\" onChange={change} />\n      </SearchBar>\n    </>\n  );\n};\n\nSearchCity.propTypes = {\n  submit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n  showResult: PropTypes.bool.isRequired,\n};\n\nexport default SearchCity;\n","import styled from 'styled-components';\nimport device from '../responsive/Device';\n\nconst SmallLabel = styled.h4`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-weight: ${({ weight }) => weight || '600'};\n  font-size: ${({ fontSize }) => fontSize || '15px'};\n  text-align: ${({ align }) => align || 'left'};\n  padding: 5px 0;\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '20px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '23px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '26px'};\n  }\n`;\n\nexport default SmallLabel;\n","import styled from 'styled-components';\nimport device from '../responsive/Device';\n\nconst Text = styled.span`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-size: ${({ fontSize }) => fontSize || '12px'};\n  text-align: ${({ align }) => align || 'left'};\n\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '15px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '17px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '19px'};\n  }\n`;\n\nexport default Text;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport SmallLabel from './SmallLabel';\nimport Text from './Text';\nimport device from '../responsive/Device';\nimport { Grid } from 'semantic-ui-react'\n\n\nconst ForecastWrapper = styled.div`\n  flex-shrink: 0;\n  flex-basis: 90px;\n  padding: 10px;\n  margin: 0 5px;\n  border-radius: 5px;\n  background-color: rgba(255, 255, 255, 0.2);\n  &:first-child {\n    margin-left: 0;\n  }\n  &:last-child {\n    margin-right: 0;\n  }\n  @media ${device.tablet} {\n    flex-basis: 110px;\n  }\n  @media ${device.laptop} {\n    flex-basis: 125px;\n  }\n  @media ${device.laptopL} {\n    flex-basis: 140px;\n  }\n`;\n\nconst WeatherIcon = styled.img`\n  display: block;\n  height: 50px;\n  width: 50px;\n  margin: 0 auto;\n`;\n\nconst ForecastHour = props => {\n  const { highestTemp, lowestTemp, month, day, hour, icon } = props;\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\n\n  return (\n    <ForecastWrapper>\n      <Text align=\"center\" style={{marginBottom:5,fontFamily:'PT Sans',fontSize:18}}>\n        {day}/{month}\n      </Text>\n      <Text align=\"center\" style={{fontFamily:'PT Sans',fontSize:16}}>{hour}:00</Text>\n      <WeatherIcon src={iconUrl} />\n      <Grid>\n        <Grid.Row columns={2}>\n          <Grid.Column style={{color:'white'}}>\n          <SmallLabel align=\"center\" weight=\"400\" style={{fontFamily:'Itim',fontSize:15}}>\n            Max\n          </SmallLabel> \n          <SmallLabel align=\"center\" weight=\"400\" style={{marginTop:-20,fontFamily:'Itim'}} >\n            {highestTemp}&#176;\n          </SmallLabel>\n          </Grid.Column>\n          <Grid.Column style={{color:'white'}}>\n          <SmallLabel align=\"center\" weight=\"400\" style={{fontFamily:'Itim',fontSize:15}}>\n            Min\n          </SmallLabel>\n          <SmallLabel align=\"center\" weight=\"400\" style={{marginTop:-20,fontFamily:'Itim'}}>\n            {lowestTemp}&#176;\n          </SmallLabel>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </ForecastWrapper>\n  );\n};\n\nForecastHour.propTypes = {\n  highestTemp: PropTypes.number.isRequired,\n  lowestTemp: PropTypes.number.isRequired,\n  month: PropTypes.string.isRequired,\n  day: PropTypes.string.isRequired,\n  hour: PropTypes.number.isRequired,\n  icon: PropTypes.string.isRequired,\n};\n\nexport default ForecastHour;\n","import { keyframes } from 'styled-components';\n\nconst ResultFadeIn = keyframes`\n  to {\n    opacity: 1;\n        visibility: visible;\n        top: 0;\n  }\n`;\n\nexport default ResultFadeIn;\n","import styled from 'styled-components';\nimport device from '../responsive/Device';\n\nconst MediumLabel = styled.h3`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-weight: ${({ weight }) => weight || '600'};\n  font-size: ${({ fontSize }) => fontSize || '20px'};\n  text-align: ${({ align }) => align || 'left'};\n  padding: 5px 0;\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '23px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '26px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '29px'};\n  }\n`;\n\nexport default MediumLabel;\n","import React from 'react';\nimport './Result.sass';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Grid } from 'semantic-ui-react'\nimport {\n  faCloud,\n  faBolt,\n  faCloudRain,\n  faCloudShowersHeavy,\n  faSnowflake,\n  faSun,\n  faSmog,\n} from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport device from '../responsive/Device';\nimport ForecastHour from './ForecastHour';\nimport ResultFadeIn from './ResultFadeIn';\nimport SmallLabel from './SmallLabel';\nimport MediumLabel from './MediumLabel'\nimport Text from './Text';\nimport './style.css'\n\nconst Results = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 40px 0;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  top: 20px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\n\nconst LocationWrapper = styled.div`\n  flex-basis: 100%;\n`;\n\nconst CurrentWeatherWrapper = styled.div`\n  flex-basis: 100%;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  grid-template-columns: auto 1fr;\n  margin: 20px 0;\n  grid-gap: 30px;\n  @media ${device.mobileL} {\n    flex-basis: 50%;\n    padding-right: 10px;\n  }\n  @media ${device.tablet} {\n    grid-template-columns: 1fr 1fr;\n    padding-right: 20px;\n  }\n`;\n\nconst WeatherIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 70px;\n  color: #ffffff;\n  @media ${device.tablet} {\n    font-size: 100px;\n    justify-content: flex-end;\n  }\n  @media ${device.laptop} {\n    font-size: 120px;\n  }\n  @media ${device.laptopL} {\n    font-size: 140px;\n  }\n`;\n\nconst Temperature = styled.h3`\n  display: block;\n  font-size: 50px;\n  font-weight: 400;\n  color: #ffffff;\n  @media ${device.tablet} {\n    font-size: 70px;\n  }\n  @media ${device.laptop} {\n    font-size: 90px;\n  }\n  @media ${device.laptopL} {\n    font-size: 110px;\n  }\n`;\n\nconst WeatherDetailsWrapper = styled.div`\n  flex-basis: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 10px 0;\n  margin: 20px 0;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 10px;\n  align-self: flex-start;\n  @media ${device.mobileL} {\n    flex-basis: 50%;\n  }\n`;\n\nconst WeatherDetail = styled.div`\n  flex-basis: calc(100% / 3);\n  padding: 10px;\n  @media ${device.laptop} {\n    padding: 20px 10px;\n  }\n`;\n\nconst ForecastWrapper = styled.div`\n  flex-basis: 100%;\n  margin: 20px 0;\n  overflow: hidden;\n`;\n\nconst Forecast = styled.div`\n  position: relative;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-color: lightgray #ffffff;\n  scrollbar-width: thin;\n  margin-top: 20px;\n  padding-bottom: 20px;\n  @media ${device.laptop} {\n    order: 4;\n  }\n`;\n\nconst Result = ({ weather }) => {\n  const {\n    city,\n    country,\n    date,\n    main,\n    temp,\n    sunset,\n    sunrise,\n    humidity,\n    pressure,\n    forecast,\n  } = weather;\n\n  const forecasts = forecast.map(item => (\n    <ForecastHour\n      key={item.dt}\n      highestTemp={Math.floor(item.main.temp_max * 1) / 1}\n      humidity={item.main.humidity}\n      lowestTemp={Math.floor(item.main.temp_min * 1) / 1}\n      pressure={item.main.pressure}\n      icon={item.weather[0].icon}\n      month={item.dt_txt.slice(5, 7)}\n      day={item.dt_txt.slice(8, 10)}\n      hour={item.dt_txt.slice(11, 13) * 1}\n    />\n  ));\n\n  let weatherIcon = null;\n\n  if (main === 'Thunderstorm') {\n    weatherIcon = <FontAwesomeIcon icon={faBolt} />;\n  } else if (main === 'Drizzle') {\n    weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\n  } else if (main === 'Rain') {\n    weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\n  } else if (main === 'Snow') {\n    weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\n  } else if (main === 'Clear') {\n    weatherIcon = <FontAwesomeIcon icon={faSun} />;\n  } else if (main === 'Clouds') {\n    weatherIcon = <FontAwesomeIcon icon={faCloud} />;\n  } else {\n    weatherIcon = <FontAwesomeIcon icon={faSmog} />;\n  }\n\n  return (\n    <Results>\n      <ForecastWrapper>\n        <Forecast>{forecasts}</Forecast>\n      </ForecastWrapper>\n      <CurrentWeatherWrapper>\n      <Grid divided='vertically' id=\"content-mobile\">\n        <Grid.Row columns={2}>\n          <Grid.Column>\n            <Temperature style={{fontFamily:'Itim'}}>{Math.floor(temp)}&#176;</Temperature>\n          </Grid.Column>\n          <Grid.Column>\n            <WeatherIcon style={{fontSize:30,marginTop:15}}>{weatherIcon}</WeatherIcon>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid> \n\n      <Grid centered id=\"content-desktop\">\n          <Grid.Column style={{marginTop:-40}}>\n            <Temperature style={{fontFamily:'Itim'}}>{Math.floor(temp)}&#176;<WeatherIcon style={{fontSize:50,marginTop:-90,position:'absolute',left:180}}>{weatherIcon}</WeatherIcon></Temperature>\n            <MediumLabel style={{marginTop:-30,fontFamily:'Itim'}}>\n              {city}, {country}\n            </MediumLabel>\n            <SmallLabel weight=\"400\" style={{marginTop:-20,fontFamily:'Itim'}}>{date}</SmallLabel>\n          </Grid.Column>\n      </Grid>\n      </CurrentWeatherWrapper>\n      \n      <LocationWrapper id=\"content-mobile\">\n        <MediumLabel style={{marginTop:-30,fontFamily:'Itim'}}>\n          {city}, {country}\n        </MediumLabel>\n        <SmallLabel weight=\"400\" style={{marginTop:-20,fontFamily:'Itim'}}>{date}</SmallLabel>\n      </LocationWrapper>\n      \n      <WeatherDetailsWrapper id=\"content-desktop\"> \n      <Grid centered>\n          <Grid.Row columns={2}>\n            <Grid.Column>\n            <WeatherDetail>\n              <Text align=\"center\" style={{fontSize:20}}><b style={{fontFamily:'Itim'}}>Pressure</b></Text>\n              <SmallLabel align=\"center\" weight=\"400\" style={{fontFamily:'Itim',marginTop:10}}>\n                {Math.floor(pressure)} hpa\n              </SmallLabel>\n            </WeatherDetail>\n            </Grid.Column>\n            <Grid.Column>\n            <WeatherDetail>\n              <Text align=\"center\" style={{fontSize:20}}><b style={{fontFamily:'Itim'}}>Humidity</b></Text>\n              <SmallLabel align=\"center\" weight=\"400\" style={{fontFamily:'Itim',marginTop:10}}>\n                {humidity} %\n              </SmallLabel>\n            </WeatherDetail>\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row columns={2} style={{marginTop:-30}}>\n            <Grid.Column>\n            <WeatherDetail>\n              <Text align=\"center\" style={{fontSize:20}}><b style={{fontFamily:'Itim'}}>Sunrise</b></Text>\n              <SmallLabel align=\"center\" weight=\"400\" style={{fontFamily:'Itim',marginTop:10}}>\n                {sunrise}\n              </SmallLabel>\n            </WeatherDetail>\n            </Grid.Column>\n            <Grid.Column>\n            <WeatherDetail>\n              <Text align=\"center\" style={{fontSize:20}}><b style={{fontFamily:'Itim'}}>Sunset</b></Text>\n              <SmallLabel align=\"center\" weight=\"400\" style={{fontFamily:'Itim',marginTop:10}}>\n                  {sunset}\n                </SmallLabel>\n              </WeatherDetail>\n            </Grid.Column>\n          </Grid.Row>\n      </Grid>\n      </WeatherDetailsWrapper>\n\n      <WeatherDetailsWrapper id=\"content-mobile\">\n      <Grid centered>\n          <Grid.Row columns={2}>\n            <Grid.Column>\n            <WeatherDetail>\n              <Text align=\"center\" style={{fontSize:20}}><b style={{fontFamily:'Itim'}}>Pressure</b></Text>\n              <SmallLabel align=\"center\" weight=\"400\" style={{fontFamily:'Itim',marginTop:10}}>\n                {Math.floor(pressure)} hpa\n              </SmallLabel>\n            </WeatherDetail>\n            </Grid.Column>\n            <Grid.Column>\n            <WeatherDetail>\n              <Text align=\"center\" style={{fontSize:20}}><b style={{fontFamily:'Itim'}}>Humidity</b></Text>\n              <SmallLabel align=\"center\" weight=\"400\" style={{fontFamily:'Itim',marginTop:10}}>\n                {humidity} %\n              </SmallLabel>\n            </WeatherDetail>\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row columns={2} style={{marginTop:-30}}>\n            <Grid.Column>\n            <WeatherDetail>\n              <Text align=\"center\" style={{fontSize:20}}><b style={{fontFamily:'Itim'}}>Sunrise</b></Text>\n              <SmallLabel align=\"center\" weight=\"400\" style={{fontFamily:'Itim',marginTop:10}}>\n                {sunrise}\n              </SmallLabel>\n            </WeatherDetail>\n            </Grid.Column>\n            <Grid.Column>\n            <WeatherDetail>\n              <Text align=\"center\" style={{fontSize:20}}><b style={{fontFamily:'Itim'}}>Sunset</b></Text>\n              <SmallLabel align=\"center\" weight=\"400\" style={{fontFamily:'Itim',marginTop:10}}>\n                  {sunset}\n                </SmallLabel>\n              </WeatherDetail>\n            </Grid.Column>\n          </Grid.Row>\n      </Grid>\n      </WeatherDetailsWrapper>\n      \n    </Results>\n  );\n};\n\nResult.propTypes = {\n  weather: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    main: PropTypes.string,\n    temp: PropTypes.number,\n    sunrise: PropTypes.string,\n    sunset: PropTypes.string,\n    humidity: PropTypes.number,\n    wind: PropTypes.number,\n    highestTemp: PropTypes.number,\n    lowestTemp: PropTypes.number,\n    forecast: PropTypes.array,\n  }).isRequired,\n};\n\nexport default Result;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFrown } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport ResultFadeIn from './ResultFadeIn';\n\nconst NotFoundWrapper = styled.div`\n  max-width: 600px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 100px auto 0;\n  padding: 20px;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  border-radius: 10px;\n  top: 20px;\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 10px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\n\nconst NotfoundIcon = styled.span`\n  display: block;\n  text-align: center;\n  color: #212121;\n  font-size: 40px;\n  margin-right: 10px;\n`;\n\nconst NotFoundText = styled.span`\n  color: #212121;\n  font-size: 17px;\n`;\n\nconst NotFound = () => {\n  return (\n    <NotFoundWrapper>\n      <NotfoundIcon>\n        <FontAwesomeIcon icon={faFrown} />\n      </NotfoundIcon>\n      <NotFoundText>Sorry, the specified city was not found !</NotFoundText>\n    </NotFoundWrapper>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport styled from 'styled-components';\nimport SearchCity from './SearchCity';\nimport device from '../responsive/Device';\nimport Result from './Result';\nimport NotFound from './NotFound';\n\nconst AppTitle = styled.h1`\n  display: block;\n  height: 64px;\n  margin: 0;\n  padding: 20px 0;\n  font-size: 20px;\n  text-transform: uppercase;\n  font-weight: 400;\n  color: #ffffff;\n  transition: 0.3s 1.4s;\n  opacity: ${({ showLabel }) => (showLabel ? 1 : 0)};\n\n  ${({ secondary }) =>\n    secondary &&\n    `\n    opacity: 1;\n    height: auto;\n    position: relative;\n    padding: 20px 0;\n    font-size: 30px;\n    top: 20%;\n    text-align: center;\n    transition: .5s;\n    @media ${device.tablet} {\n      font-size: 40px;\n    }\n    @media ${device.laptop} {\n      font-size: 50px;\n    }\n    @media ${device.laptopL} {\n      font-size: 60px;\n    }\n    @media ${device.desktop} {\n      font-size: 70px;\n    }\n    \n  `}\n\n  ${({ showResult }) =>\n    showResult &&\n    `\n    opacity: 0;\n    visibility: hidden;\n    top: 10%;\n  `}\n`;\n\nconst WeatherWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  height: calc(100vh - 64px);\n  width: 100%;\n  position: relative;\n`;\n\nclass App extends React.Component {\n  state = {\n    value: '',\n    weatherInfo: null,\n    error: false,\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  handleSearchCity = e => {\n    e.preventDefault();\n    const { value } = this.state;\n    const APIkey = `87eb04e63a1d2d86f382d92a06242e9c`;\n\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\n\n    Promise.all([fetch(weather), fetch(forecast)])\n      .then(([res1, res2]) => {\n        if (res1.ok && res2.ok) {\n          return Promise.all([res1.json(), res2.json()]);\n        }\n        throw Error(res1.statusText, res2.statusText);\n      })\n      .then(([data1, data2]) => {\n        const months = [\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'November',\n          'December',\n        ];\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        const currentDate = new Date();\n        const date = `${days[currentDate.getDay()]}, ${currentDate.getDate()} ${\n          months[currentDate.getMonth()]\n        }`;\n        const sunset = new Date(data1.sys.sunset * 1000).toLocaleTimeString('en-IN');\n        const sunrise = new Date(data1.sys.sunrise * 1000).toLocaleTimeString('en-IN');\n\n        const weatherInfo = {\n          city: data1.name,\n          country: data1.sys.country,\n          date,\n          description: data1.weather[0].description,\n          main: data1.weather[0].main,\n          temp: data1.main.temp,\n          highestTemp: data1.main.temp_max,\n          lowestTemp: data1.main.temp_min,\n          sunrise,\n          sunset,\n          clouds: data1.clouds.all,\n          humidity: data1.main.humidity,\n          pressure: data1.main.pressure,\n          wind: data1.wind.speed,\n          forecast: data2.list,\n        };\n        this.setState({\n          weatherInfo,\n          error: false,\n        });\n      })\n      .catch(error => {\n        console.log(error);\n\n        this.setState({\n          error: true,\n          weatherInfo: null,\n        });\n      });\n  };\n\n  render() {\n    const { value, weatherInfo, error } = this.state;\n    return (\n      <div style={{padding:20}}>\n        <AppTitle showLabel={(weatherInfo || error) && true} style={{fontFamily:'Itim',marginBottom:-35}}>Merryweather!</AppTitle>\n        <WeatherWrapper>\n          <AppTitle secondary showResult={(weatherInfo || error) && true} style={{fontFamily:'Itim'}}>\n            Merryweather!\n          </AppTitle>\n\n          <AppTitle secondary showResult={(weatherInfo || error) && true} style={{fontFamily:'Roboto',fontSize:17,marginTop:-20}}>\n            Enter a city to get it's weather..\n          </AppTitle>\n          <SearchCity\n            value={value}\n            showResult={(weatherInfo || error) && true}\n            change={this.handleInputChange}\n            submit={this.handleSearchCity}\n          />\n          {weatherInfo && <Result weather={weatherInfo} />}\n          {error && <NotFound error={error} />}\n        </WeatherWrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\nReactDOM.render(<App />, document.getElementById('weather-app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}